import numpy as np
import matplotlib.pyplot as plt
from PIL import Image

# Load the image
image_path = 'path_to_image.jpg'
image = Image.open(image_path)

# Convert the image to a NumPy array
image_array = np.array(image)

# Generate sample data for the points
x = np.random.randint(0, image_array.shape[1], size=100)
y = np.random.randint(0, image_array.shape[0], size=100)
intensity = np.random.rand(100) * 255  # Intensity values between 0 and 255

# Plot the image
plt.imshow(image_array)

# Plot the points with intensity as a heatmap
plt.scatter(x, y, c=intensity, cmap='hot', alpha=0.5)

plt.colorbar()  # Add colorbar for reference

plt.show()


import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from PIL import Image

# Load the image
image_path = 'path_to_image.jpg'
image = Image.open(image_path)

# Convert the image to a NumPy array
image_array = np.array(image)

# Generate sample data for the points
x = np.array([1, 2, 3, 2, 3, 1, 3])  # x coordinates
y = np.array([4, 5, 6, 4, 6, 4, 5])  # y coordinates

# Create a DataFrame to store the data
data = pd.DataFrame({'x': x, 'y': y})

# Calculate intensity based on the repetitions of each unique x, y pair
data['repetitions'] = data.groupby(['x', 'y']).transform('count')
data['intensity'] = data['repetitions'] * 0.5  # Adjust intensity calculation as needed

# Remove duplicate rows
unique_data = data.drop_duplicates(['x', 'y'])

# Plot the image
plt.imshow(image_array)

# Plot the unique points with intensity as a heatmap
plt.scatter(unique_data['x'], unique_data['y'], c=unique_data['intensity'], cmap='hot', alpha=0.5)

plt.colorbar()  # Add colorbar for reference

plt.show()
